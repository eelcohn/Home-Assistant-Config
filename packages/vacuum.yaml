vacuum:
  - platform: roomba
    name: Roomba Living Quarters
    host: !secret vacuum_lr_ip
    username: !secret vacuum_lr_username
    password: !secret vacuum_lr_password
    continuous: true

input_number:
  housecleaning_hour:
    name: House cleaning hour
    icon: mdi:timer
    initial: 11
    min: 0
    max: 23
    step: 1
  housecleaning_minutes:
    name: House cleaning minutes
    icon: mdi:timer
    initial: 00
    min: 0
    max: 59
    step: 1

input_boolean:
  housecleaning_activated:
    name: Automatisch stofzuigen
    icon: mdi:clock-outline
    initial: 'on'

binary_sensor:
  - platform: workday
    name: vacuum_days
    country: NL
    workdays: [tue, fri]

sensor:
  - platform: template
    sensors:
      housecleaning_time:
        friendly_name: 'House cleaning starts at'
        icon_template: mdi:alarm
        value_template: '{% if states("input_number.housecleaning_hour")|round(0)|int < 10 %}0{% endif %}{{ states("input_number.housecleaning_hour")|round(0)|string }}:{% if states("input_number.housecleaning_minutes")|round(0)|int < 10 %}0{% endif %}{{ states("input_number.housecleaning_minutes")|round(0)|string }}'
        entity_id:
          - input_number.housecleaning_minutes
          - input_number.housecleaning_hour
group:
  vacuum:
    name: "Robot Vacuumers"
    control: hidden
    entities:
      - binary_sensor.vacuum_days
      - input_boolean.housecleaning_activated
      - input_number.housecleaning_minutes
      - input_number.housecleaning_hour
      - sensor.housecleaning_time
      - vacuum.roomba_living_quarters

automation:
# ------------------------------------------------------- #
# Start the vacuum robots!                                #
# ------------------------------------------------------- #
- alias: 'House cleaning'
  initial_state: true
  trigger:
    - platform: time_pattern
      minutes: '/1'
      seconds: 0
  condition:
    - condition: template
      value_template: "{{ is_state('input_boolean.housecleaning_activated', 'on') }}"
    - condition: state
      entity_id: 'binary_sensor.vacuum_days'
      state: 'on'
    - condition: template
      value_template: "{{ states('sensor.time') == states('sensor.housecleaning_time') }}"
    - condition: template
      value_template: "{{ is_state_attr('vacuum.roomba_living_quarters', 'bin_present', true) }}"
# TODO: The Roomba implementation does not return the bin_full attribute
#    - condition: template
#      value_template: "{{ is_state_attr('vacuum.roomba_living_quarters', 'bin_full', false) }}"
    - condition: template
      value_template: "{{ is_state_attr('vacuum.roomba_living_quarters', 'battery_level', 100) }}"
  action:
    - service: vacuum.turn_on
      data:
        entity_id: vacuum.roomba_living_quarters

# ------------------------------------------------------- #
# Alert if the bin of the robot is full                   #
# ------------------------------------------------------- #
- alias: 'Vacuum Bin Full Alert'
  initial_state: true
  trigger:
    - platform: template
      value_template: "{{ is_state_attr('vacuum.roomba_living_quarters', 'bin_full', true) }}"
  action:
    - service: notify.eelco
      data_template:
        title: '*House cleaning*'
        message: 'De stofbak zit vol, zou je mij willen leegmaken?'

# ------------------------------------------------------- #
# Alert if the robot is stuck or dead                     #
# ------------------------------------------------------- #
- alias: 'Vacuum Stuck Alert'
  initial_state: true
  trigger:
    - platform: template
      value_template: "{{ is_state_attr('vacuum.roomba_living_quarters', 'status', 'Stuck') }}"
    - platform: template
      value_template: "{{ is_state_attr('vacuum.roomba_living_quarters', 'status', 'Dead') }}"
  action:
    - service: notify.eelco
      data_template:
        title: '*House cleaning*'
        message: >-
          {%-if   is_state_attr('vacuum.roomba_living_quarters', 'status', 'Stuck') -%} De stofzuigrobot is vastgelopen ({{ state_attr('vacuum.roomba_living_quarters', 'error') }}).
          {%-elif is_state_attr('vacuum.roomba_living_quarters', 'status', 'Dead')  -%} De stofzuigrobot reageert niet meer ({{ state_attr('vacuum.roomba_living_quarters', 'error') }}).
          {%-else-%} De stofzuigrobot geeft een onbekende status aan: {{ state_attr('vacuum.roomba_living_quarters', 'status') }} ({{ state_attr('vacuum.roomba_living_quarters', 'error') }}).
          {%-endif-%}

